var pc=require(__dirname+"/porcupine.js");
var fs=require("fs");
var sampler=require(__dirname+"/sampler.js");

function pico(keywords,inputSampleRate,callback){
	
	this.por=undefined;
	this.sampler=undefined;
	this.keys=[];
	
	this.init=async function(){
		await pc.Loaded;
		let combine=[];

		let sensitives=[];
		let index=0;
		for(var i in keywords){

			combine.push(new Uint8Array(keywords[i]));
			this.keys[index++]=i;
			sensitives.push(0.85);

		}
		//console.log(combine,new Float32Array(sensitives));
		this.por=pc.create(combine,new Float32Array(sensitives));

		var that=this;
		
		this.sampler=new sampler(inputSampleRate,function(frame){
		let res=that.por.process(frame);
		if(res!=-1)
		callback(that.keys[res]);
	
		});
	}
	
	
	this.feed=function(data){
		this.sampler.feed(data);
	}

}
module.exports=pico;
